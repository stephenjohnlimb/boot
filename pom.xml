<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.7</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.tinker</groupId>
	<artifactId>spring-boot</artifactId>
	<version>1.0.7</version>
	<name>spring-boot</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<start-class>com.tinker.boot.BootApplication</start-class>
		<!-- We can use the artifact id and the version to tie into the docker release naming -->
		<image.path>192.168.64.2:32000/spring-boot:${project.version}</image.path>
	</properties>

	<profiles>
		<profile>
			<id>just-boot</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<start-class>com.tinker.boot.BootApplication</start-class>
				<image.path>192.168.64.2:32000/spring-boot:${project.version}</image.path>
			</properties>
		</profile>
		<profile>
			<id>kafka-boot</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<start-class>com.tinker.kafka.SpringBootKafkaApplication</start-class>
				<image.path>192.168.64.2:32000/kafka-boot:${project.version}</image.path>
			</properties>
		</profile>
	</profiles>

	<dependencies>

		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>1.11.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- These are for exposing metrics -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

		<!-- Just for trying out direct connections via jdbc-->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.3.5</version>
		</dependency>

		<!-- For trying out with kafka -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>3.2.0</version>
		</dependency>

		<!-- Just for checking out an ORM via Spring -->
		<dependency>
			<groupId>jakarta.transaction</groupId>
			<artifactId>jakarta.transaction-api</artifactId>
			<version>1.3.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>2.2.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.6.8.Final</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>jaxb-api</artifactId>
					<groupId>javax.xml.bind</groupId>
				</exclusion>
				<exclusion>
					<artifactId>javax.activation-api</artifactId>
					<groupId>javax.activation</groupId>
				</exclusion>
				<exclusion>
					<artifactId>javax.persistence-api</artifactId>
					<groupId>javax.persistence</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jboss-transaction-api_1.2_spec</artifactId>
					<groupId>org.jboss.spec.javax.transaction</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>2.6.4</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>5.3.19</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java8</artifactId>
			<version>7.3.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>7.3.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>5.9.0-M1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>au.com.dius</groupId>
			<artifactId>pact-jvm-consumer-junit5</artifactId>
			<version>4.0.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>au.com.dius</groupId>
			<artifactId>pact-jvm-consumer-java8</artifactId>
			<version>4.0.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>au.com.dius</groupId>
			<artifactId>pact-jvm-provider-junit5</artifactId>
			<version>4.0.10</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>1.11.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
						</goals>
						<configuration>
							<sourceDirectory>${project.basedir}/src/main/avro/</sourceDirectory>
							<outputDirectory>${project.build.directory}/generated-sources/avro</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>2.5.0</version>
				<configuration>
					<allowInsecureRegistries>true</allowInsecureRegistries>
					<from>
						<image>openjdk:17-jdk-alpine</image>
					</from>
					<to>
						<image>${image.path}</image>
					</to>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- Need to specify the main as I've added a second 'main' application -->
					<mainClass>${start-class}</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
