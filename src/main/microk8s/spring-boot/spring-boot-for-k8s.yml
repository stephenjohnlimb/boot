apiVersion: v1
kind: Service
metadata:
  labels:
    app: spring-boot-for-k8s
  name: spring-boot-service
spec:
  type: NodePort
  ports:
  - port: 9095
    protocol: TCP
    targetPort: 8080
  selector:
    app: spring-boot-for-k8s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spring-boot-for-k8s
  name: spring-boot-for-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-for-k8s
  template:
    metadata:
      labels:
        app: spring-boot-for-k8s
    spec:
      containers:
      - image: localhost:32000/spring-boot:latest
        name: spring-boot
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
        env:
          # Define the environment variable
          - name: TEST_ENV_VAR # Notice that the case is different here
            # from the key name in the ConfigMap.
            valueFrom:
              configMapKeyRef:
                name: spring-boot-map # The ConfigMap this value comes from.
                key: check_value # The key to fetch, this will get mapped into TEST_ENV_VAR.
        volumeMounts:
          - name: check-config
            mountPath: "/config/check.properties"
            subPath: "check.properties"
            readOnly: true
          - name: application-config
            mountPath: "/config/application.properties"
            subPath: "application.properties"
            readOnly: true
      volumes:
        # You set volumes at the Pod level, then mount them into containers inside that Pod
        - name: check-config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: spring-boot-map
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "check.properties"
                path: "check.properties"
        - name: application-config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: spring-boot-map
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "application.properties"
                path: "application.properties"